{"uid":"c4942079f2135185","name":"Создание заказа неавторизованным пользователем","fullName":"tests.test_create_order.TestCreateOrder#test_create_order_unauth_user_failed","historyId":"dfda5c0ce83f00687bb8f84b094fa67d","time":{"start":1757439466811,"stop":1757439467191,"duration":380},"status":"failed","statusMessage":"AssertionError: assert 200 == 401\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <tests.test_create_order.TestCreateOrder object at 0x00000154F92B1BD0>\n\n    @allure.title('Создание заказа неавторизованным пользователем')\n    def test_create_order_unauth_user_failed(self):\n        with allure.step('Отправляем запрос на создание заказа с валидными данными'):\n            order_response = OrderMethods.create_order(IngredientData.valid_data)\n        with allure.step('Проверяем, что сервер возвращает статус 401 и success: false'):\n>           assert order_response.status_code == 401\nE           assert 200 == 401\nE            +  where 200 = <Response [200]>.status_code\n\ntests\\test_create_order.py:28: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757439458018,"stop":1757439458019,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 200 == 401\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <tests.test_create_order.TestCreateOrder object at 0x00000154F92B1BD0>\n\n    @allure.title('Создание заказа неавторизованным пользователем')\n    def test_create_order_unauth_user_failed(self):\n        with allure.step('Отправляем запрос на создание заказа с валидными данными'):\n            order_response = OrderMethods.create_order(IngredientData.valid_data)\n        with allure.step('Проверяем, что сервер возвращает статус 401 и success: false'):\n>           assert order_response.status_code == 401\nE           assert 200 == 401\nE            +  where 200 = <Response [200]>.status_code\n\ntests\\test_create_order.py:28: AssertionError","steps":[{"name":"Отправляем запрос на создание заказа с валидными данными","time":{"start":1757439466811,"stop":1757439467189,"duration":378},"status":"passed","steps":[{"name":"Создание заказа","time":{"start":1757439466811,"stop":1757439467189,"duration":378},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"order_data","value":"{'ingredients': ['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f']}"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":1,"attachmentStep":false,"hasContent":true},{"name":"Проверяем, что сервер возвращает статус 401 и success: false","time":{"start":1757439467189,"stop":1757439467189,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 200 == 401\n +  where 200 = <Response [200]>.status_code\n","statusTrace":"  File \"C:\\Users\\Admin\\Diplom\\Diplom_2\\tests\\test_create_order.py\", line 28, in test_create_order_unauth_user_failed\n    assert order_response.status_code == 401\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":3,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"API: Создание заказа"},{"name":"story","value":"Создание заказа на бургера"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_create_order"},{"name":"subSuite","value":"TestCreateOrder"},{"name":"host","value":"DESKTOP-RUV96V5"},{"name":"thread","value":"21508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_create_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"c4942079f2135185.json","parameterValues":[]}